//
//  NoteDetailsViewController.swift
//  S.Kh_Task_26
//
//  Created by Saba Khitaridze on 25.08.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NoteDetailsDisplayLogic: AnyObject {
    func display(noteDetails: Note)
    func didFailDisplayNoteDetails(withError message: String)
}

class NoteDetailsViewController: UIViewController {
    
    //MARK: - IBOutlets
    
    @IBOutlet weak var noteTitleView: UITextView!
    @IBOutlet weak var noteTextView: UITextView!
    
    //MARK: - Vars
    
    var interactor: NoteDetailsBusinessLogic?
    var noteID: UUID?
    var isNoteEditing = false
    
    override func viewDidLoad() {
        super.viewDidLoad()
        getNote()
        setupSaveBtn()
    }
    
    //MARK: - Save button methods
    
    private func setupSaveBtn() {
        self.navigationItem.hidesBackButton = true
        let newBackButton = UIBarButtonItem(title: "ï¼œ Back", style: .plain, target: self, action: isNoteEditing ? #selector(saveEditedBtnPressed(_:)) : #selector(saveBtnPressed(_:)))
        self.navigationItem.leftBarButtonItem = newBackButton
    }
    
    @objc func saveBtnPressed(_ sender: UIBarButtonItem) {
        addNewNote()
        navigationController?.popViewController(animated: true)
    }
    
    @objc func saveEditedBtnPressed(_ sender: UIBarButtonItem) {
        editNote()
        navigationController?.popViewController(animated: true)
    }
    
    //MARK: - Interactor methods
    
    private func addNewNote(){
        interactor?.addNote(withTitle: noteTitleView.text, withText: noteTextView.text)
    }
    
    private func getNote() {
        guard let id = noteID else { return }
        interactor?.getNote(withId: id)
    }
    
    private func editNote() {
        guard let id = noteID else { return }
        interactor?.editNote(withId: id, newTitle: noteTitleView.text, newText: noteTextView.text)
    }
    
}

//MARK: - Display Logic Protocol

extension NoteDetailsViewController: NoteDetailsDisplayLogic {
    func display(noteDetails: Note) {
        noteTitleView.text = noteDetails.title
        noteTextView.text = noteDetails.text
    }
    
    func didFailDisplayNoteDetails(withError message: String) {
        print(message)
    }
    
}
