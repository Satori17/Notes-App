//
//  FavoriteNotesInteractor.swift
//  S.Kh_Task_26
//
//  Created by Saba Khitaridze on 25.08.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FavoriteNotesBusinessLogic {
    func fetchFavoriteNotes()
    func removeNoteFromFavorites(note: Note)
}


class FavoriteNotesInteractor {
    var presenter: FavoriteNotesPresentationLogic?
    var worker: FavoriteNotesWorker?
    
}


extension FavoriteNotesInteractor: FavoriteNotesBusinessLogic {
    
    func fetchFavoriteNotes() {
        worker = FavoriteNotesWorker()
        
        worker?.getFavoriteNotes(completion: { result in
            switch result {
            case .success(let favoriteNotes):
                let response = FavoriteNoteModel.Response(allFavoriteNotes: favoriteNotes)
                presenter?.presentFavoriteNotes(response: response)
            case .failure(let error):
                presenter?.didFailPresentFavoriteNotes(withError: error)
            }
        })
    }
    
    func removeNoteFromFavorites(note: Note) {
        do {
            try NoteStorageManager.shared.removeToFavorites(note: note)
        } catch {
            print(StorageManagerError.removeFailed)
        }
    }
    
}
