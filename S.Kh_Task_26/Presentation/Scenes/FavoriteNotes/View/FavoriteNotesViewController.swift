//
//  FavoriteNotesViewController.swift
//  S.Kh_Task_26
//
//  Created by Saba Khitaridze on 25.08.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FavoriteNotesDisplayLogic: AnyObject {
    func displayFavorite(notes: [Note])
    func didFailDisplayFavoriteNotes(withError message: StorageManagerError)
}

class FavoriteNotesViewController: UIViewController {
    
    //MARK: - IBOutlets
    
    @IBOutlet weak var favoriteNotesTableView: UITableView!
    
    //MARK: - Vars
    
    var interactor: FavoriteNotesBusinessLogic?
    var router: FavoriteNotesRoutingLogic?
    var favoriteNotes: [Note] = [] {
        didSet {
            favoriteNotesTableView.reloadData()
        }
    }
    
    // MARK: View lifecycle
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        FavoriteNotesConfigurator.configure(vc: self)
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        favoriteNotesTableView.registerNib(class: NoteCell.self)
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        fetchFavoriteNotes()
    }
    
    //MARK: - Methods
    
    func fetchFavoriteNotes() {
        interactor?.fetchFavoriteNotes()
    }
    
}

//MARK: - Display Logic & add to favorite Protocol

extension FavoriteNotesViewController: FavoriteNotesDisplayLogic, FavoriteNotesDelegate {
    
    func addFavoriteNote(cell: NoteCell) {
    }
    
    func removeFavoriteNote(cell: NoteCell) {
        if let indexPath = favoriteNotesTableView.indexPath(for: cell) {
            let currentNote = favoriteNotes[indexPath.row]
            favoriteNotes.remove(at: indexPath.row)
            interactor?.removeNoteFromFavorites(note: currentNote)
        }
    }
    
    func displayFavorite(notes: [Note]) {
        self.favoriteNotes = notes
    }
    
    func didFailDisplayFavoriteNotes(withError message: StorageManagerError) {
        print(message)
    }
    
}

//MARK: - TableView Delegate & DataSource

extension FavoriteNotesViewController: UITableViewDelegate, UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        favoriteNotes.count
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        80
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(forIndexPath: indexPath) as NoteCell
        let currentNote = favoriteNotes[indexPath.row]
        cell.configure(with: currentNote)
        cell.delegate = self
        
        return cell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
        let currentNote = favoriteNotes[indexPath.row]
        router?.routeToNoteDetails(with: currentNote.id, isEditing: true)        
    }
    
}
